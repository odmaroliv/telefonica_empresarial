@page "/numeros/detalle/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using TelefonicaEmpresaria.Models
@using TelefonicaEmpresaria.Services.TelefonicaEmpresarial.Services

@attribute [Authorize]
@inject UserManager<ApplicationUser> UserManager
@inject ITelefonicaService TelefonicaService
@inject NavigationManager NavigationManager

<div class="container mx-auto px-4 py-8">
    <div class="flex items-center mb-8">
        <button @onclick="Regresar" class="mr-3 text-gray-500 hover:text-gray-700">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
        </button>
        <h1 class="text-3xl font-bold text-gray-800">Detalle del Número</h1>
    </div>

    @if (numero == null)
    {
        <div class="flex justify-center">
            <div class="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="col-span-1 bg-white rounded-lg shadow-md p-6">
                <h2 class="text-xl font-semibold mb-4 text-gray-800">Información General</h2>

                <div class="space-y-4">
                    <div>
                        <div class="text-sm text-gray-500">Número</div>
                        <div class="text-lg font-medium">@FormatearNumero(numero.Numero)</div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">Estado</div>
                        <div>
                            @if (numero.Activo)
                            {
                                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                    Activo
                                </span>
                            }
                            else
                            {
                                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                                    Inactivo
                                </span>
                            }
                        </div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">Redirección a</div>
                        <div class="text-base">@numero.NumeroRedireccion</div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">SMS</div>
                        <div>
                            @if (numero.SMSHabilitado)
                            {
                                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                                    Habilitado
                                </span>
                            }
                            else
                            {
                                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800">
                                    Deshabilitado
                                </span>
                            }
                        </div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">Comprado el</div>
                        <div class="text-base">@numero.FechaCompra.ToString("dd/MM/yyyy")</div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">Expira el</div>
                        <div class="text-base">@numero.FechaExpiracion.ToString("dd/MM/yyyy")</div>
                    </div>

                    <div>
                        <div class="text-sm text-gray-500">Costo Mensual</div>
                        <div class="text-base">$@numero.CostoMensual.ToString("0.00") MXN</div>
                    </div>

                    @if (numero.SMSHabilitado && numero.CostoSMS.HasValue)
                    {
                        <div>
                            <div class="text-sm text-gray-500">Costo Mensual SMS</div>
                            <div class="text-base">$@numero.CostoSMS.Value.ToString("0.00") MXN</div>
                        </div>
                    }
                </div>

                <div class="mt-6 space-y-3">
                    <a href="/numeros/editar/@numero.Id" class="w-full inline-flex justify-center items-center px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z" />
                        </svg>
                        Editar Configuración
                    </a>
                    @if (numero.Activo)
                    {
                        <button @onclick="() => MostrarModalCancelacion()" class="w-full inline-flex justify-center items-center px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                            </svg>
                            Cancelar Número
                        </button>
                    }
                </div>
            </div>

            <div class="col-span-2 bg-white rounded-lg shadow-md p-6">
                <div>
                    <ul class="flex mb-6 border-b">
                        <li class="mr-2">
                            <button class="@(pestanaActiva == "llamadas" ? "border-b-2 border-blue-500 text-blue-600" : "text-gray-500 hover:text-gray-700") py-2 px-1 font-medium"
                                    @onclick='() => CambiarPestana("llamadas")'>
                                Historial de Llamadas
                            </button>
                        </li>
                        <li class="mr-2">
                            <button class="@(pestanaActiva == "sms" ? "border-b-2 border-blue-500 text-blue-600" : "text-gray-500 hover:text-gray-700") py-2 px-1 font-medium"
                                    @onclick='() => CambiarPestana("sms")'>
                                Mensajes SMS
                            </button>
                        </li>
                    </ul>
                    @if (pestanaActiva == "llamadas")
                    {
                        @if (numero.LogsLlamadas != null && numero.LogsLlamadas.Any())
                        {
                            <div class="overflow-x-auto">
                                <table class="min-w-full divide-y divide-gray-200">
                                    <thead class="bg-gray-50">
                                        <tr>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fecha y Hora</th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Número de Origen</th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Duración</th>
                                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Estado</th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white divide-y divide-gray-200">
                                        @foreach (var llamada in numero.LogsLlamadas.OrderByDescending(l => l.FechaHora))
                                        {
                                            <tr>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@llamada.FechaHora.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">@FormatearNumero(llamada.NumeroOrigen)</td>
                                                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@FormatearDuracion(llamada.Duracion)</td>
                                                <td class="px-6 py-4 whitespace-nowrap">
                                                    <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                                                        @llamada.Estado
                                                    </span>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-8 text-gray-500">
                                <p>No hay registros de llamadas para este número.</p>
                            </div>
                        }
                    }
                    else if (pestanaActiva == "sms")
                    {
                        @if (!numero.SMSHabilitado)
                        {
                            <div class="text-center py-8 text-gray-500">
                                <p>Este número no tiene habilitada la recepción de SMS.</p>
                                <button @onclick="HabilitarSMS" class="mt-4 px-4 py-2 bg-blue-600 text-white text-sm font-medium rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors">
                                    Habilitar SMS
                                </button>
                            </div>
                        }
                        else if (numero.LogsSMS != null && numero.LogsSMS.Any())
                        {
                            <div class="space-y-4">
                                @foreach (var sms in numero.LogsSMS.OrderByDescending(s => s.FechaHora))
                                {
                                    <div class="p-4 border rounded-lg">
                                        <div class="flex justify-between items-start mb-2">
                                            <div class="font-medium">De: @FormatearNumero(sms.NumeroOrigen)</div>
                                            <div class="text-sm text-gray-500">@sms.FechaHora.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</div>
                                        </div>
                                        <div class="text-gray-700 break-words">
                                            @sms.Mensaje
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-8 text-gray-500">
                                <p>No hay mensajes SMS recibidos para este número.</p>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }

    @if (mostrarModalCancelacion)
    {
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg overflow-hidden shadow-xl max-w-md w-full mx-4">
                <div class="p-6">
                    <h3 class="text-lg font-medium text-gray-900 mb-4">¿Estás seguro de que deseas cancelar este número?</h3>
                    <p class="text-sm text-gray-500 mb-4">
                        Esta acción cancelará tu suscripción y liberará el número. Ya no podrás recibir llamadas ni mensajes en este número.
                    </p>
                    <div class="mt-6 flex justify-end space-x-3">
                        <button @onclick="() => mostrarModalCancelacion = false"
                                class="px-4 py-2 bg-gray-200 text-gray-800 text-sm font-medium rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-colors">
                            Cancelar
                        </button>
                        <button @onclick="CancelarNumero"
                                class="px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                            Confirmar Cancelación
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private NumeroTelefonico? numero;
    private string pestanaActiva = "llamadas";
    private bool mostrarModalCancelacion = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarNumero();
    }

    private async Task CargarNumero()
    {
        numero = await TelefonicaService.ObtenerNumeroDetalle(Id);
        if (numero == null)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
    }

    private void CambiarPestana(string pestana)
    {
        pestanaActiva = pestana;
    }

    private void MostrarModalCancelacion()
    {
        mostrarModalCancelacion = true;
    }

    private async Task CancelarNumero()
    {
        if (numero != null)
        {
            var resultado = await TelefonicaService.CancelarNumero(numero.Id);
            if (resultado)
            {
                NavigationManager.NavigateTo("/dashboard");
            }
            else
            {
                // Mostrar mensaje de error
                mostrarModalCancelacion = false;
            }
        }
    }

    private async Task HabilitarSMS()
    {
        if (numero != null)
        {
            var resultado = await TelefonicaService.HabilitarSMS(numero.Id);
            if (resultado)
            {
                await CargarNumero();
            }
        }
    }

    private void Regresar()
    {
        NavigationManager.NavigateTo("/dashboard");
    }

    private string FormatearNumero(string? numero)
    {
        if (string.IsNullOrEmpty(numero))
            return "";

        // Formato simple para números mexicanos: +52 (XXX) XXX-XXXX
        if (numero.StartsWith("+52") && numero.Length >= 13)
        {
            return $"+52 ({numero.Substring(3, 3)}) {numero.Substring(6, 3)}-{numero.Substring(9)}";
        }

        return numero;
    }

    private string FormatearDuracion(int segundos)
    {
        var duracion = TimeSpan.FromSeconds(segundos);
        return $"{duracion.Minutes:D2}:{duracion.Seconds:D2}";
    }
}