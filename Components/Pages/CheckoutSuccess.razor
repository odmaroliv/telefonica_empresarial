@page "/checkout/success"
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using TelefonicaEmpresarial.Services
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavigationManager
@inject IStripeService StripeService
@inject ITwilioService TwilioService
@inject ITelefonicaService TelefonicaService
@inject IJSRuntime JSRuntime
@inject ILogger<CheckoutSuccess> Logger
@inject ProtectedSessionStorage SessionStorage

<div class="min-h-screen flex items-center justify-center bg-gray-50 px-4">
    <div class="max-w-md w-full bg-white rounded-lg shadow-xl overflow-hidden">
        @if (procesando)
        {
            <div class="py-16 px-8 text-center">
                <div class="animate-spin rounded-full h-16 w-16 border-t-2 border-b-2 border-blue-500 mx-auto mb-6"></div>
                <h2 class="text-2xl font-bold text-gray-800 mb-2">Verificando tu compra</h2>
                <p class="text-gray-600">
                    Estamos confirmando tu pago.<br />
                    Por favor espera un momento...
                </p>
            </div>
        }
        else if (error != null)
        {
            <div class="py-16 px-8 text-center">
                <div class="bg-red-100 p-4 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </div>
                <h2 class="text-2xl font-bold text-gray-800 mb-2">Ocurrió un problema</h2>
                <p class="text-gray-600 mb-6">
                    @error
                </p>
                <div class="mt-8">
                    <button @onclick="IrADashboard" class="px-5 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors">
                        Ir al Dashboard
                    </button>
                </div>
            </div>
        }
        else
        {
            <div class="py-16 px-8 text-center">
                <div class="bg-green-100 p-4 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-6">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                    </svg>
                </div>
                <h2 class="text-2xl font-bold text-gray-800 mb-2">¡Compra exitosa!</h2>
                <p class="text-gray-600 mb-6">
                    Tu número telefónico está siendo configurado.<br />
                    @if (!numeroActivo)
                    {
                        <span class="text-yellow-600">El sistema está procesando tu compra. Este proceso puede tomar unos minutos.</span>
                    }
                    else
                    {
                        <span>Tu número ya está disponible en tu dashboard.</span>
                    }
                </p>
                <div class="bg-gray-50 rounded-lg p-6 mb-8">
                    <div class="flex justify-between mb-2">
                        <span class="font-medium">Número:</span>
                        <span>@numeroAdquirido</span>
                    </div>
                    <div class="flex justify-between mb-2">
                        <span class="font-medium">Estado:</span>
                        <span class="@(numeroActivo ? "text-green-600" : "text-yellow-600") font-medium">
                            @(numeroActivo ? "Activo" : "En procesamiento")
                        </span>
                    </div>
                    <div class="flex justify-between">
                        <span class="font-medium">SMS:</span>
                        <span>@(smsHabilitado ? "Habilitado" : "No habilitado")</span>
                    </div>
                </div>
                <div class="mt-8">
                    <button @onclick="IrADashboard" class="px-5 py-3 bg-blue-600 text-white rounded-lg font-medium hover:bg-blue-700 transition-colors">
                        Ir al Dashboard
                    </button>
                </div>
            </div>
        }
    </div>
</div>

@code {
    private bool procesando = true;
    private string? error;
    private string? numeroAdquirido;
    private bool smsHabilitado;
    private bool numeroActivo;
    private string? sessionId;
    private int? numeroId;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Obtener session_id del query parameter
            var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("session_id", out var sessionIdValue))
            {
                sessionId = sessionIdValue;
                Logger.LogInformation($"Session ID recibido: {sessionId}");

                // Comprobar en sesión si ya tenemos un numeroId guardado
                var resultado = await SessionStorage.GetAsync<int>("NumeroId");
                if (resultado.Success)
                {
                    numeroId = resultado.Value;
                    Logger.LogInformation($"NumeroId recuperado de sesión: {numeroId}");
                }

                // SÓLO consultar el estado del pago y mostrar información al usuario
                await ConsultarEstadoPago();
            }
            else
            {
                error = "No se encontró la información de la sesión de pago.";
                Logger.LogWarning("No se recibió session_id en los parámetros");
            }
        }
        catch (Exception ex)
        {
            error = $"Ocurrió un error al consultar tu compra: {ex.Message}";
            Logger.LogError(ex, "Error al inicializar la página de éxito");
        }
        finally
        {
            procesando = false;
        }
    }

    private async Task ConsultarEstadoPago()
    {
        try
        {
            if (string.IsNullOrEmpty(sessionId))
            {
                error = "ID de sesión no válido.";
                return;
            }

            // Verificar el estado del pago
            var session = await StripeService.ObtenerDetallesSesion(sessionId);

            if (session == null)
            {
                error = "No se pudo obtener información sobre la sesión de pago.";
                return;
            }

            if (session.PaymentStatus != "paid")
            {
                error = "El pago aún no se ha completado. El webhook procesará la transacción cuando se confirme el pago.";
                Logger.LogWarning($"Pago aún no completado para sesión {sessionId}");
                return;
            }

            Logger.LogInformation($"Estado de pago para sesión {sessionId}: {session.PaymentStatus}");

            // Buscar información sobre el número asociado
            if (numeroId.HasValue)
            {
                // Si tenemos ID del número, consultamos sus detalles
                var numeroDetalle = await TelefonicaService.ObtenerNumeroDetalle(numeroId.Value);
                if (numeroDetalle != null)
                {
                    numeroAdquirido = numeroDetalle.Numero;
                    smsHabilitado = numeroDetalle.SMSHabilitado;
                    numeroActivo = numeroDetalle.Activo;
                    Logger.LogInformation($"Detalles del número recuperados: {numeroAdquirido}, Activo: {numeroActivo}");
                }
                else
                {
                    // No encontramos el número pero sabemos que el pago fue exitoso
                    error = "Pago confirmado. El número está siendo procesado por nuestro sistema. Por favor, verifica en tu dashboard en unos minutos.";
                    Logger.LogWarning($"No se encontró el número con ID {numeroId} aunque el pago fue exitoso");
                }
            }
            else
            {
                // Si no tenemos ID del número, intentamos buscarlo por la sesión de pago
                var transaccion = await TelefonicaService.ObtenerTransaccionPorSesion(sessionId);
                if (transaccion?.NumeroTelefonico != null)
                {
                    numeroAdquirido = transaccion.NumeroTelefonico.Numero;
                    smsHabilitado = transaccion.NumeroTelefonico.SMSHabilitado;
                    numeroActivo = transaccion.NumeroTelefonico.Activo;
                    Logger.LogInformation($"Número encontrado por transacción: {numeroAdquirido}, Activo: {numeroActivo}");
                }
                else
                {
                    // Si no encontramos el número, mostramos mensaje genérico
                    numeroAdquirido = "Tu número está siendo procesado";
                    smsHabilitado = false;
                    numeroActivo = false;
                    Logger.LogWarning("No se encontró número asociado a la sesión de pago");
                }
            }
        }
        catch (Exception ex)
        {
            error = $"Ocurrió un error al consultar tu compra: {ex.Message}";
            Logger.LogError(ex, "Error al consultar el estado del pago");
        }
    }

    private void IrADashboard()
    {
        NavigationManager.NavigateTo("/dashboard");
    }
}